#!/usr/bin/env node

var nodePath    = require('path')
var program = require('commander')
var pkg     = require('../package.json')
var harp    = require('../')
var fse     = require("fs-extra")

program
  .version(pkg.version)

program
  .command('init [path]')
  .description('initalize new harp application in current directory')
  .action(function(path, program){
    var projectPath = nodePath.resolve(path || process.cwd())

    var done = function(err){
      console.log('initializd project at', projectPath)
    }

    if(path){
      var src  = nodePath.resolve(__dirname, "../test/apps/basic")
      var dest = nodePath.join(projectPath)
      fse.copy(src, dest, done)
    }else{
      var src  = nodePath.resolve(__dirname, "../test/apps/basic/public")
      var dest = nodePath.join(projectPath, "public")
      
      var readmeSrc = nodePath.join(__dirname, "../test/apps/basic/README.md")
      var readmeDest = nodePath.join(projectPath, "README.md")
      
      var harpJsonSrc = nodePath.join(__dirname, "../test/apps/basic/harp.json")
      var harpJsonDest = nodePath.join(projectPath, "harp.json")
      
      fse.copy(src, dest, function(err){
        fse.copy(readmeSrc, readmeDest, function(err){
          fse.copy(harpJsonSrc, harpJsonDest, done)
        })
      })
    }
    
  })
  
program
  .command('server [path]')
  .option('-p, --port <port>', 'specify port to listen on')
  .description('start harp server')
  .action(function(path, program){
    var projectPath = nodePath.resolve(path || process.cwd())      
    var port        = program.port || 9966
    harp.server(projectPath, { port: port, hostmode: false }, function(){
      console.log("server is listening on port", port)
    })
  })
program
  .command('compile [path]')
  .option('-o, --output <path>', 'specify output directory for compiled assets (relative to project path)')
  .description('compile project to static assets')
  .action(function(path, program){
    var projectPath = nodePath.resolve(path || process.cwd())
    var outputPath  = program.output || null
    harp.compile(projectPath, outputPath, function(errors, output){
      console.log(JSON.stringify(errors || output, null, 2))
    })
  })
  
program
  .command('multihost [path]')
  .option('-p, --port <port>', 'specify port to listen on')
  .description('start harp server to host directory of harp apps')
  .action(function(path, program){
    var projectPath = nodePath.resolve(path || process.cwd())
    var port        = program.port || 9966
    harp.server(projectPath, { port: port, hostmode: true }, function(){
      console.log("server is hosting multiple projects on port", port)
    })
  })

program.parse(process.argv)

if(program.args.length < 1){
  program.help()
}
